@inherits LayoutComponentBase

@inject NavigationManager _navManager

<MudLayout>
    <MudAppBar Elevation="5">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="ToggleDrawer" />
        <MudSpacer />
        <LoginDisplay />
    </MudAppBar>

    <MudDrawer Elevation="5" @bind-Open="_drawerIsOpened" ClipMode="DrawerClipMode.Never" Variant="DrawerVariant.Responsive">
        <DrawerMenu />
    </MudDrawer>

    <CascadingValue Value="this">
        <MudMainContent>
            <MudContainer Class="py-5">
                <MudBreadcrumbs Class="mb-2" Items="_breadcrumbItems" />

                <MudCard Class="p-md-5 p-2" Style="min-height: 80vh;">
                    <MudCardContent>
                        @Body
                    </MudCardContent>
                </MudCard>
            </MudContainer>
        </MudMainContent>
    </CascadingValue>
</MudLayout>

<MudDialogProvider />
<MudThemeProvider Theme="_currentTheme" />

@code {
    private bool _drawerIsOpened = true;
    private List<BreadcrumbItem> _breadcrumbItems = new List<BreadcrumbItem>() { new BreadcrumbItem("Inicio", href: "") };
    private MudTheme _currentTheme = new MudTheme
        {
            Palette = new Palette()
            {
                Black = Colors.Shades.Black,
                Background = Colors.Grey.Lighten3,
                BackgroundGrey = Colors.Grey.Lighten1,
                TextPrimary = Colors.Grey.Darken4,
                TextSecondary = Colors.Grey.Darken3,
                AppbarBackground = Colors.BlueGrey.Darken3,
                AppbarText = Colors.Grey.Lighten5,
                DrawerBackground = Colors.BlueGrey.Darken4,
                DrawerText = Colors.Grey.Lighten5,
                DrawerIcon = Colors.Grey.Lighten5,
                Surface = Colors.BlueGrey.Lighten5,
                TableLines = Colors.BlueGrey.Lighten4,
                Primary = Colors.Blue.Accent3,
                Secondary = Colors.Grey.Darken1,
                Warning = Colors.Amber.Accent3
            }
        };

    public async Task SetBreadcrumb(List<BreadcrumbItem> breadcrumb)
    {
        _breadcrumbItems = breadcrumb;

        StateHasChanged();

        await Task.CompletedTask;
    }

    private void ToggleDrawer() => _drawerIsOpened = !_drawerIsOpened;
}
